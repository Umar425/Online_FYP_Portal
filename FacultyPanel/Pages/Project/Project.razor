@page "/project"
@using ClassLibraryDAL
@using ClassLibraryModel
@inject NavigationManager nm


<h3>Project Management</h3>
<table class="table">
    <thead>
        <tr>
            <th> Project ID</th>
            <th>Project Name</th>
            <th>Faculty Name</th>
            <th> Project Details</th>
            <th> StartDate</th>
            <th> EndDate</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in projects)
        {
            <tr>
                
                <td>@item.ProjectID</td>
                <td>@item.ProjectName</td>
                <td>@item.FacultyName</td>
                <td>@item.ProjectDetails</td>
                <td>@item.StartDate</td>
                <td>@item.EndDate</td>
                <td>
                  
                </td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="AddProject">Add Project</button>
<button class="btn btn-primary" @onclick="DeleteProject">Delete Project</button>
<button class="btn btn-primary" @onclick="EditProject">Edit Project</button>
<button class="btn btn-primary" @onclick="DeleteProject">ProjectRequest</button>
<button class="btn btn-primary" @onclick="EditProject">RequestResponse</button>


@code {
    private List<ProjectModel> projects { get; set; }

    /* protected override async Task OnInitializedAsync()
     {
         projects = await ProjectDAL.GetProjects();
     }  */

    protected override void OnInitialized()
    {
        projects = ProjectDAL.GetProjects();
    }
    private void AddProject()
    {
        nm.NavigateTo("/project/add");
    }
    private void DeleteProject()
    {
        nm.NavigateTo("/project/del");
    }
    private void EditProject()
    {
        nm.NavigateTo("/project/edit");
    }

    private void ProjectRequest()
    {
        nm.NavigateTo("/project/del");
    }
    private void RequestResponse()
    {
        nm.NavigateTo("/project/edit");
    }
}